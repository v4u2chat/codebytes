package com.test.example;

import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.time.Duration;
import java.time.Instant;
import java.util.Date;

public class ConsistentHashing {
    
    public static byte[] getSHA(String input) throws NoSuchAlgorithmException
    { 
        // Static getInstance method is called with hashing SHA 
        MessageDigest md = MessageDigest.getInstance("SHA-256"); 
  
        // digest() method called 
        // to calculate message digest of an input 
        // and return array of byte
        Instant startTime = Instant.now();
        byte[] shaStr = md.digest(input.getBytes(StandardCharsets.UTF_8));
        System.out.println(Duration.between(startTime, Instant.now()).toMillis());

        return shaStr; 
    }
    
    public static String toHexString(byte[] hash)
    {
        // Convert byte array into signum representation 
        BigInteger number = new BigInteger(1, hash); 
  
        // Convert message digest into hex value 
        StringBuilder hexString = new StringBuilder(number.toString(16)); 
  
        // Pad with leading zeros
        while (hexString.length() < 32) 
        { 
            hexString.insert(0, '0'); 
        } 
  
        return hexString.toString(); 
    }
  
    // Driver code 
    public static void main(String args[])
    { 
        try 
        {
            System.out.println("HashCode Generated by SHA-256 for:"); 
  
            String s1 = "GeeksForGeeks"; 
            System.out.println("\nGeeksForGeeks\t" + getSHA(s1) + " : " + toHexString(getSHA(s1))); 
  
            String s2 = "hello world"; 
            System.out.println("\nhello world\t" + getSHA(s2) + " : " + toHexString(getSHA(s2))); 
        }
        // For specifying wrong message digest algorithms 
        catch (NoSuchAlgorithmException e) { 
            System.out.println("Exception thrown for incorrect algorithm: " + e); 
        } 
    }
}
